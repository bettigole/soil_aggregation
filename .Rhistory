library("rstudioapi")
setwd('D:/Users/cbettigo/Documents/GitHub/soil_aggregation')
source('code/projectSetup.R')
source('code/aggregateFun.R')
source('code/anovaFun.R')
source('code/plotBarFun.R')
set.seet<-42
data<-sb # choose l7, sb, or caney
data.m<-data$mean_carb %>% mean()
data.sd<-data$mean_carb %>% sd()
data<-sb # choose l7, sb, or caney
data.m<-data$mean_carb %>% mean()
data.sd<-data$mean_carb %>% sd()
# hist(data$mean_carb,breaks=seq(0,8,0.25))
ecdf(data$mean_carb) %>% plot()
x_plnorm <- seq(0, 10, by = 0.01)
pn<-plnorm(x_plnorm,meanlog=data.m,mean_carb=data.sd)
pn<-plnorm(x_plnorm,meanlog=data.m,sdlog=data.sd)
pn
plot(pn)
data.m<-data$mean_carb %>% log() %>% mean()
data.sd<-data$mean_carb %>% log() %>% sd()
# hist(data$mean_carb,breaks=seq(0,8,0.25))
ecdf(data$mean_carb) %>% plot()
x_plnorm <- seq(0, 10, by = 0.01)
pn<-plnorm(x_plnorm,meanlog=data.m,sdlog=data.sd)
pn
plot(pn)
x_plnorm <- seq(0, nrow(data), by = 1)
pn<-plnorm(x_plnorm,meanlog=data.m,sdlog=data.sd)
plot(pn)
x_plnorm <- seq(0, 10, by = 0.01)
pn<-plnorm(x_plnorm,meanlog=data.m,sdlog=data.sd)
plot(pn)
plot(pn,color='blue')
plot(pn,col='blue')
plot(pn,col='darkblue')
# hist(data$mean_carb,breaks=seq(0,8,0.25))
ecdf(data$mean_carb) %>% plot()
plot(pn,col='darkblue',add=T)
# hist(data$mean_carb,breaks=seq(0,8,0.25))
ecdf(data$mean_carb) %>% plot()
pn<-dlnorm(x_plnorm,meanlog=data.m,sdlog=data.sd)
plot(pn,col='darkblue',add=T)
pn<-plnorm(x_plnorm,meanlog=data.m,sdlog=data.sd)
pn<-plnorm(q=x_plnorm,meanlog=data.m,sdlog=data.sd)
plot(pn,col='darkblue',add=T)
# hist(data$mean_carb,breaks=seq(0,8,0.25))
ecdf(data$mean_carb) %>% plot()
ks.test(data$mean_carb,'plnorm')
x2 <- rnorm(50, -1)
plot(ecdf(x), xlim = range(c(x, x2)))
plot(ecdf(x2), add = TRUE, lty = "dashed")
t.test(x, x2, alternative = "g")
wilcox.test(x, x2, alternative = "g")
ks.test(x, x2, alternative = "l")
x <- rnorm(50)
x2 <- rnorm(50, -1)
plot(ecdf(x), xlim = range(c(x, x2)))
plot(ecdf(x2), add = TRUE, lty = "dashed")
t.test(x, x2, alternative = "g")
wilcox.test(x, x2, alternative = "g")
ks.test(x, x2, alternative = "l")
rlnorm(100) %>% plot()
rlnorm(100) %>% hist()
rlnorm(100,meanlog=2.2,sdlog=0.8) %>% hist()
rlnorm(100,meanlog=data.m,sdlog=data.sd) %>% hist()
hist(data$mean_carb,add=TRUE)
rlnorm(nrow(data),meanlog=2.2,sdlog=0.8) %>% hist()
data<-sb # choose l7, sb, or caney
data.m<-data$mean_carb %>% log() %>% mean()
data.sd<-data$mean_carb %>% log() %>% sd()
rlnorm(nrow(data),meanlog=2.2,sdlog=0.8) %>% hist()
rlnorm(nrow(data),meanlog=data.m,sdlog=data.sd) %>% hist()
rlnorm(nrow(data),meanlog=data.m,sdlog=data.sd) %>% hist(col='darkblue')
hist(data$mean_carb,col='orangered')
ggplot(data$mean_carb)+
geom_histogram(aes(color='orangered'))
ggplot(data)+
geom_histogram(data$mean_carb,aes(color='orangered'))
ggplot(data,aes(x=data$mean_carb))+
geom_histogram(data$mean_carb,aes(color='orangered'))
ggplot(data,aes(x=data$mean_carb))+
geom_histogram(data$mean_carb,color='orangered')
lognorm<-rlnorm(nrow(data),meanlog=data.m,sdlog=data.sd) %>% data.frame() %>% mutate(type='lognorm')
head(lognorm)
binder = data$mean_carb %>%  data.frame() %>% mutate(type='empirical') %>%
rbind(lognorm)
head(binder)
binder = data$mean_carb %>%  data.frame() %>% mutate(type='empirical') %>%
rbind(lognorm) %>% rename('.','carb')
binder = data$mean_carb %>%  data.frame() %>% mutate(type='empirical') %>%
rbind(lognorm) %>% rename('carb','.')
binder = data$mean_carb %>%  data.frame() %>% mutate(type='empirical') %>%
rbind(lognorm) %>% rename(carb=.)
binder = data$mean_carb %>%  data.frame() %>% mutate(type='empirical') %>%
rbind(lognorm)
binder$.
ggplot(binder,aes(x=.,color=type))+
geom_histogram()
nrow(lognorm)
ggplot(binder,aes(x=.,color=type))+
geom_histogram(fill='white')
nrow(data)
binder = data$mean_carb %>%  data.frame() %>% mutate(type='empirical')
binder = data$mean_carb %>%  data.frame() %>% mutate(type='empirical') %>%
rbind(lognorm)
ggplot(binder,aes(x=.,color=type))+
geom_histogram(fill='white')
ks.test(binder %>% filter(type='lognorm'),binder %>% filter(type='empirical'))
ks.test(binder %>% filter(type=='lognorm'),binder %>% filter(type=='empirical'))
ks.test(x=binder %>% filter(type=='lognorm'),y=binder %>% filter(type=='empirical'))
binder %>% filter(type=='empirical')
ks.test(x=data$mean_carb,y=lognorm$.)
ks.test(data$mean_carb,sample(data$mean_carb,20))
ks.test(data$mean_carb,sample(data$mean_carb,20))
ks.test(data$mean_carb,sample(data$mean_carb,20))
ks.test(data$mean_carb,sample(data$mean_carb,5))
ks.test(data$mean_carb,sample(data$mean_carb,5))
ks.test(data$mean_carb,sample(data$mean_carb,5))
ks.test(data$mean_carb,sample(data$mean_carb,5))
ks.test(data$mean_carb,sample(data$mean_carb,5))
ks.test(data$mean_carb,sample(data$mean_carb,5))
ks.test(data$mean_carb,sample(data$mean_carb,5))
ks.test(data$mean_carb,sample(data$mean_carb,5))
ks.test(data$mean_carb,sample(data$mean_carb,5))
ks.test(data$mean_carb,sample(data$mean_carb,5))
ks.test(data$mean_carb,sample(data$mean_carb,5))
ks.test(data$mean_carb,sample(data$mean_carb,5))
ks.test(data$mean_carb,sample(data$mean_carb,5))
ks.test(data$mean_carb,sample(data$mean_carb,5))
ks.test(data$mean_carb,sample(data$mean_carb,5))
ks.test(data$mean_carb,sample(data$mean_carb,5))
ks.test(data$mean_carb,sample(data$mean_carb,100))
ks.test(data$mean_carb,sample(data$mean_carb,100))
ks.test(data$mean_carb,sample(data$mean_carb,100))
ks.test(data$mean_carb,sample(data$mean_carb,100))
ks.test(data$mean_carb,sample(data$mean_carb,100))
x=100
result<-ks.test(data$mean_carb,sample(data$mean_carb,x))
str(result)
result$p.value
lister = c()
for (x in c(1:nrow(data))){
result<-ks.test(data$mean_carb,sample(data$mean_carb,x))
lister[x]<-result$p.value
}
lister = c()
for (x in c(1:nrow(data))){
result<-ks.test(data$mean_carb,sample(data$mean_carb,x)) %>% suppressWarnings()
lister[x]<-result$p.value
}
plot(lister)
lister = c()
for (x in c(1:nrow(data))){
innerLister = c()
for (z in c(1:100)){
result<-ks.test(data$mean_carb,sample(data$mean_carb,x)) %>% suppressWarnings()
innerLister[z]<-result$p.value}
lister[x]<-mean(innerLister)
}
plot(lister)
lister = c()
for (x in c(1:nrow(data))){
innerLister = c()
for (z in c(1:500)){
result<-ks.test(data$mean_carb,sample(data$mean_carb,x)) %>% suppressWarnings()
innerLister[z]<-result$p.value}
lister[x]<-mean(innerLister)
}
plot(result)
result
# create ECDF of data
cdf1 <- ecdf(data$mean_carb)
cdf2 <- ecdf(data$mean_carb %>% sample(24))
# find min and max statistics to draw line between points of greatest distance
minMax <- seq(min(sample1, sample2), max(sample1, sample2), length.out=length(sample1))
sample1 <- data$mean_carb
sample2 <- data$mean_carb %>% sample(24)
# create ECDF of data
cdf1 <- ecdf(sample1)
cdf2 <- ecdf(sample2)
# find min and max statistics to draw line between points of greatest distance
minMax <- seq(min(sample1, sample2), max(sample1, sample2), length.out=length(sample1))
x0 <- minMax[which( abs(cdf1(minMax) - cdf2(minMax)) == max(abs(cdf1(minMax) - cdf2(minMax))) )]
y0 <- cdf1(x0)
y1 <- cdf2(x0)
######################### non ggplot example
plot(cdf1, verticals=TRUE, do.points=FALSE, col="blue")
plot(cdf2, verticals=TRUE, do.points=FALSE, col="green", add=TRUE)
######################### non ggplot example
plot(cdf1, verticals=TRUE, do.points=FALSE, col="blue")
plot(cdf2, verticals=TRUE, do.points=FALSE, col="green", add=TRUE)
######################### non ggplot example
plot(cdf1, verticals=TRUE, do.points=FALSE, col="blue")
plot(cdf1)
plot(cdf2,add=T)
plot(cdf2)
plot(cdf1)
plot(cdf1,do.points=FALSE)
plot(cdf2,do.points=FALSE)
plot(cdf2,do.points=FALSE,verticals=TRUE)
plot(cdf2, verticals=TRUE, do.points=FALSE, col="green", add=T)
######################### non ggplot example
plot(cdf1, verticals=TRUE, do.points=FALSE, col="blue")
plot(cdf2, verticals=TRUE, do.points=FALSE, col="green", add=T)
group <- c(rep("sample1", length(sample1)), rep("sample2", length(sample2)))
dat <- data.frame(KSD = c(sample1,sample2), group = group)
ggplot(dat, aes(x = KSD, group = group, color = group))+
stat_ecdf(size=1) +
theme_bw(base_size = 28) +
theme(legend.position ="top") +
xlab("Sample") +
ylab("ECDF") +
#geom_line(size=1) +
geom_segment(aes(x = x0[1], y = y0[1], xend = x0[1], yend = y1[1]),
linetype = "dashed", color = "red") +
geom_point(aes(x = x0[1] , y= y0[1]), color="red", size=8) +
geom_point(aes(x = x0[1] , y= y1[1]), color="red", size=8) +
ggtitle("K-S Test: Sample 1 / Sample 2") +
theme(legend.title=element_blank())
ggplot(dat, aes(x = KSD, group = group, color = group))+
stat_ecdf(size=1) +
theme_bw(base_size = 28) +
theme(legend.position ="top") +
xlab("Sample") +
ylab("ECDF") +
#geom_line(size=1) +
geom_segment(aes(x = x0[1], y = y0[1], xend = x0[1], yend = y1[1]),
linetype = "dashed", color = "red") +
geom_point(aes(x = x0[1] , y= y0[1]), color="red", size=8) +
geom_point(aes(x = x0[1] , y= y1[1]), color="red", size=8) +
ggtitle("K-S Test: Sample 1 / Sample 2") +
theme(legend.title=element_blank())
ggplot(dat, aes(x = KSD, group = group, color = group))+
stat_ecdf(size=1) +
theme_bw(base_size = 28) +
theme(legend.position ="side") +
xlab("Sample") +
ylab("ECDF") +
#geom_line(size=1) +
geom_segment(aes(x = x0[1], y = y0[1], xend = x0[1], yend = y1[1]),
linetype = "dashed", color = "red") +
geom_point(aes(x = x0[1] , y= y0[1]), color="red", size=8) +
geom_point(aes(x = x0[1] , y= y1[1]), color="red", size=8) +
theme(legend.title=element_blank())
ggplot(dat, aes(x = KSD, group = group, color = group))+
stat_ecdf(size=1) +
theme_bw(base_size = 28) +
theme(legend.position ="side") +
xlab("Sample") +
ylab("ECDF") +
#geom_line(size=1) +
geom_segment(aes(x = x0[1], y = y0[1], xend = x0[1], yend = y1[1]),
linetype = "dashed", color = "red") +
geom_point(aes(x = x0[1] , y= y0[1]), color="red", size=8) +
geom_point(aes(x = x0[1] , y= y1[1]), color="red", size=8) +
theme(legend.title=element_blank())
ggplot(dat, aes(x = KSD, group = group, color = group))+
stat_ecdf(size=1) +
theme_bw(base_size = 28) +
xlab("Sample") +
ylab("ECDF") +
#geom_line(size=1) +
geom_segment(aes(x = x0[1], y = y0[1], xend = x0[1], yend = y1[1]),
linetype = "dashed", color = "red") +
geom_point(aes(x = x0[1] , y= y0[1]), color="red", size=8) +
geom_point(aes(x = x0[1] , y= y1[1]), color="red", size=8) +
theme(legend.title=element_blank())
ggplot(dat, aes(x = KSD, group = group, color = group))+
stat_ecdf(size=1) +
theme_bw() +
xlab("Sample") +
ylab("ECDF") +
#geom_line(size=1) +
geom_segment(aes(x = x0[1], y = y0[1], xend = x0[1], yend = y1[1]),
linetype = "dashed", color = "red") +
geom_point(aes(x = x0[1] , y= y0[1]), color="red", size=8) +
geom_point(aes(x = x0[1] , y= y1[1]), color="red", size=8) +
theme(legend.title=element_blank())
ggplot(dat, aes(x = KSD, group = group, color = group))+
stat_ecdf(size=1) +
theme_bw() +
xlab("Sample") +
ylab("ECDF") +
#geom_line(size=1) +
geom_segment(aes(x = x0[1], y = y0[1], xend = x0[1], yend = y1[1]),
linetype = "dashed", color = "red") +
geom_point(aes(x = x0[1] , y= y0[1]), color="red", size=4) +
geom_point(aes(x = x0[1] , y= y1[1]), color="red", size=4) +
theme(legend.title=element_blank())
sample1 <- data$mean_carb
sample2 <- data$mean_carb %>% sample(24)
group <- c(rep("sample1", length(sample1)), rep("sample2", length(sample2)))
dat <- data.frame(KSD = c(sample1,sample2), group = group)
# create ECDF of data
cdf1 <- ecdf(sample1)
cdf2 <- ecdf(sample2)
# find min and max statistics to draw line between points of greatest distance
minMax <- seq(min(sample1, sample2), max(sample1, sample2), length.out=length(sample1))
x0 <- minMax[which( abs(cdf1(minMax) - cdf2(minMax)) == max(abs(cdf1(minMax) - cdf2(minMax))) )]
y0 <- cdf1(x0)
y1 <- cdf2(x0)
ggplot(dat, aes(x = KSD, group = group, color = group))+
stat_ecdf(size=1) +
theme_bw() +
xlab("Sample") +
ylab("ECDF") +
geom_segment(aes(x = x0[1], y = y0[1], xend = x0[1], yend = y1[1]),
linetype = "dashed", color = "red") +
geom_point(aes(x = x0[1] , y= y0[1]), color="red", size=4) +
geom_point(aes(x = x0[1] , y= y1[1]), color="red", size=4) +
theme(legend.title=element_blank())
sample1 <- data$mean_carb
sample2 <- data$mean_carb %>% sample(24)
group <- c(rep("sample1", length(sample1)), rep("sample2", length(sample2)))
dat <- data.frame(KSD = c(sample1,sample2), group = group)
# create ECDF of data
cdf1 <- ecdf(sample1)
cdf2 <- ecdf(sample2)
# find min and max statistics to draw line between points of greatest distance
minMax <- seq(min(sample1, sample2), max(sample1, sample2), length.out=length(sample1))
x0 <- minMax[which( abs(cdf1(minMax) - cdf2(minMax)) == max(abs(cdf1(minMax) - cdf2(minMax))) )]
y0 <- cdf1(x0)
y1 <- cdf2(x0)
ggplot(dat, aes(x = KSD, group = group, color = group))+
stat_ecdf(size=1) +
theme_bw() +
xlab("Sample") +
ylab("ECDF") +
geom_segment(aes(x = x0[1], y = y0[1], xend = x0[1], yend = y1[1]),
linetype = "dashed", color = "red") +
geom_point(aes(x = x0[1] , y= y0[1]), color="red", size=4) +
geom_point(aes(x = x0[1] , y= y1[1]), color="red", size=4) +
theme(legend.title=element_blank())
sample1 <- data$mean_carb
sample2 <- data$mean_carb %>% sample(24)
group <- c(rep("sample1", length(sample1)), rep("sample2", length(sample2)))
dat <- data.frame(KSD = c(sample1,sample2), group = group)
# create ECDF of data
cdf1 <- ecdf(sample1)
cdf2 <- ecdf(sample2)
# find min and max statistics to draw line between points of greatest distance
minMax <- seq(min(sample1, sample2), max(sample1, sample2), length.out=length(sample1))
x0 <- minMax[which( abs(cdf1(minMax) - cdf2(minMax)) == max(abs(cdf1(minMax) - cdf2(minMax))) )]
y0 <- cdf1(x0)
y1 <- cdf2(x0)
ggplot(dat, aes(x = KSD, group = group, color = group))+
stat_ecdf(size=1) +
theme_bw() +
xlab("Sample") +
ylab("ECDF") +
geom_segment(aes(x = x0[1], y = y0[1], xend = x0[1], yend = y1[1]),
linetype = "dashed", color = "red") +
geom_point(aes(x = x0[1] , y= y0[1]), color="red", size=4) +
geom_point(aes(x = x0[1] , y= y1[1]), color="red", size=4) +
theme(legend.title=element_blank())
sample1 <- data$mean_carb
sample2 <- data$mean_carb %>% sample(24)
group <- c(rep("sample1", length(sample1)), rep("sample2", length(sample2)))
dat <- data.frame(KSD = c(sample1,sample2), group = group)
# create ECDF of data
cdf1 <- ecdf(sample1)
cdf2 <- ecdf(sample2)
# find min and max statistics to draw line between points of greatest distance
minMax <- seq(min(sample1, sample2), max(sample1, sample2), length.out=length(sample1))
x0 <- minMax[which( abs(cdf1(minMax) - cdf2(minMax)) == max(abs(cdf1(minMax) - cdf2(minMax))) )]
y0 <- cdf1(x0)
y1 <- cdf2(x0)
ggplot(dat, aes(x = KSD, group = group, color = group))+
stat_ecdf(size=1) +
theme_bw() +
xlab("Sample") +
ylab("ECDF") +
geom_segment(aes(x = x0[1], y = y0[1], xend = x0[1], yend = y1[1]),
linetype = "dashed", color = "red") +
geom_point(aes(x = x0[1] , y= y0[1]), color="red", size=4) +
geom_point(aes(x = x0[1] , y= y1[1]), color="red", size=4) +
theme(legend.title=element_blank())
sample1 <- data$mean_carb
sample2 <- data$mean_carb %>% sample(24)
group <- c(rep("sample1", length(sample1)), rep("sample2", length(sample2)))
dat <- data.frame(KSD = c(sample1,sample2), group = group)
# create ECDF of data
cdf1 <- ecdf(sample1)
cdf2 <- ecdf(sample2)
# find min and max statistics to draw line between points of greatest distance
minMax <- seq(min(sample1, sample2), max(sample1, sample2), length.out=length(sample1))
x0 <- minMax[which( abs(cdf1(minMax) - cdf2(minMax)) == max(abs(cdf1(minMax) - cdf2(minMax))) )]
y0 <- cdf1(x0)
y1 <- cdf2(x0)
ggplot(dat, aes(x = KSD, group = group, color = group))+
stat_ecdf(size=1) +
theme_bw() +
xlab("Sample") +
ylab("ECDF") +
geom_segment(aes(x = x0[1], y = y0[1], xend = x0[1], yend = y1[1]),
linetype = "dashed", color = "red") +
geom_point(aes(x = x0[1] , y= y0[1]), color="red", size=4) +
geom_point(aes(x = x0[1] , y= y1[1]), color="red", size=4) +
theme(legend.title=element_blank())
sample1 <- data$mean_carb
sample2 <- data$mean_carb %>% sample(24)
group <- c(rep("sample1", length(sample1)), rep("sample2", length(sample2)))
dat <- data.frame(KSD = c(sample1,sample2), group = group)
# create ECDF of data
cdf1 <- ecdf(sample1)
cdf2 <- ecdf(sample2)
# find min and max statistics to draw line between points of greatest distance
minMax <- seq(min(sample1, sample2), max(sample1, sample2), length.out=length(sample1))
x0 <- minMax[which( abs(cdf1(minMax) - cdf2(minMax)) == max(abs(cdf1(minMax) - cdf2(minMax))) )]
y0 <- cdf1(x0)
y1 <- cdf2(x0)
ggplot(dat, aes(x = KSD, group = group, color = group))+
stat_ecdf(size=1) +
theme_bw() +
xlab("Sample") +
ylab("ECDF") +
geom_segment(aes(x = x0[1], y = y0[1], xend = x0[1], yend = y1[1]),
linetype = "dashed", color = "red") +
geom_point(aes(x = x0[1] , y= y0[1]), color="red", size=4) +
geom_point(aes(x = x0[1] , y= y1[1]), color="red", size=4) +
theme(legend.title=element_blank())
sample1 <- data$mean_carb
sample2 <- data$mean_carb %>% sample(24)
group <- c(rep("sample1", length(sample1)), rep("sample2", length(sample2)))
dat <- data.frame(KSD = c(sample1,sample2), group = group)
# create ECDF of data
cdf1 <- ecdf(sample1)
cdf2 <- ecdf(sample2)
# find min and max statistics to draw line between points of greatest distance
minMax <- seq(min(sample1, sample2), max(sample1, sample2), length.out=length(sample1))
x0 <- minMax[which( abs(cdf1(minMax) - cdf2(minMax)) == max(abs(cdf1(minMax) - cdf2(minMax))) )]
y0 <- cdf1(x0)
y1 <- cdf2(x0)
ggplot(dat, aes(x = KSD, group = group, color = group))+
stat_ecdf(size=1) +
theme_bw() +
xlab("Sample") +
ylab("ECDF") +
geom_segment(aes(x = x0[1], y = y0[1], xend = x0[1], yend = y1[1]),
linetype = "dashed", color = "red") +
geom_point(aes(x = x0[1] , y= y0[1]), color="red", size=4) +
geom_point(aes(x = x0[1] , y= y1[1]), color="red", size=4) +
theme(legend.title=element_blank())
sample1 <- data$mean_carb
sample2 <- data$mean_carb %>% sample(24)
group <- c(rep("sample1", length(sample1)), rep("sample2", length(sample2)))
dat <- data.frame(KSD = c(sample1,sample2), group = group)
# create ECDF of data
cdf1 <- ecdf(sample1)
cdf2 <- ecdf(sample2)
# find min and max statistics to draw line between points of greatest distance
minMax <- seq(min(sample1, sample2), max(sample1, sample2), length.out=length(sample1))
x0 <- minMax[which( abs(cdf1(minMax) - cdf2(minMax)) == max(abs(cdf1(minMax) - cdf2(minMax))) )]
y0 <- cdf1(x0)
y1 <- cdf2(x0)
ggplot(dat, aes(x = KSD, group = group, color = group))+
stat_ecdf(size=1) +
theme_bw() +
xlab("Sample") +
ylab("ECDF") +
geom_segment(aes(x = x0[1], y = y0[1], xend = x0[1], yend = y1[1]),
linetype = "dashed", color = "red") +
geom_point(aes(x = x0[1] , y= y0[1]), color="red", size=4) +
geom_point(aes(x = x0[1] , y= y1[1]), color="red", size=4) +
theme(legend.title=element_blank())
plot(lister)
plot(lister,ylab='p-value')
plot(lister,ylab='p-value',xlab='n samples')
data<-caney # choose l7, sb, or caney
data.m<-data$mean_carb %>% log() %>% mean()
data.sd<-data$mean_carb %>% log() %>% sd()
lognorm<-rlnorm(nrow(data),meanlog=data.m,sdlog=data.sd) %>% data.frame() %>% mutate(type='lognorm')
binder = data$mean_carb %>%  data.frame() %>% mutate(type='empirical') %>%
rbind(lognorm)
ggplot(binder,aes(x=.,color=type))+
geom_histogram(fill='white')
ks.test(x=data$mean_carb,y=lognorm$.)
sample1 <- data$mean_carb
sample2 <- data$mean_carb %>% sample(24)
group <- c(rep("sample1", length(sample1)), rep("sample2", length(sample2)))
dat <- data.frame(KSD = c(sample1,sample2), group = group)
# create ECDF of data
cdf1 <- ecdf(sample1)
cdf2 <- ecdf(sample2)
# find min and max statistics to draw line between points of greatest distance
minMax <- seq(min(sample1, sample2), max(sample1, sample2), length.out=length(sample1))
x0 <- minMax[which( abs(cdf1(minMax) - cdf2(minMax)) == max(abs(cdf1(minMax) - cdf2(minMax))) )]
y0 <- cdf1(x0)
y1 <- cdf2(x0)
ggplot(dat, aes(x = KSD, group = group, color = group))+
stat_ecdf(size=1) +
theme_bw() +
xlab("Sample") +
ylab("ECDF") +
geom_segment(aes(x = x0[1], y = y0[1], xend = x0[1], yend = y1[1]),
linetype = "dashed", color = "red") +
geom_point(aes(x = x0[1] , y= y0[1]), color="red", size=4) +
geom_point(aes(x = x0[1] , y= y1[1]), color="red", size=4) +
theme(legend.title=element_blank())
lister = c()
for (x in c(1:nrow(data))){
innerLister = c()
for (z in c(1:500)){
result<-ks.test(data$mean_carb,sample(data$mean_carb,x)) %>% suppressWarnings()
innerLister[z]<-result$p.value}
lister[x]<-mean(innerLister)
}
plot(lister,ylab='p-value',xlab='n samples')
t<-4
t+2
